
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000698  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000844  0800084c  0001084c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000844  08000844  0001084c  2**0
                  CONTENTS
  4 .ARM          00000000  08000844  08000844  0001084c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000844  0800084c  0001084c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000844  08000844  00010844  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000848  08000848  00010848  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001084c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0001084c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0001084c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  0001087c  2**0
                  CONTENTS, READONLY
 14 .debug_info   000009d9  00000000  00000000  000108bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000283  00000000  00000000  00011298  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000000c0  00000000  00000000  00011520  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000085  00000000  00000000  000115e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00001404  00000000  00000000  00011665  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000fa1  00000000  00000000  00012a69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0000573b  00000000  00000000  00013a0a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000024c  00000000  00000000  00019148  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000083  00000000  00000000  00019394  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000000 	.word	0x20000000
 80001c8:	00000000 	.word	0x00000000
 80001cc:	0800082c 	.word	0x0800082c

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000004 	.word	0x20000004
 80001e8:	0800082c 	.word	0x0800082c

080001ec <delay>:

#include "stm32f429xx.h"


void delay(void)
{
 80001ec:	b480      	push	{r7}
 80001ee:	b083      	sub	sp, #12
 80001f0:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000; i++);
 80001f2:	2300      	movs	r3, #0
 80001f4:	607b      	str	r3, [r7, #4]
 80001f6:	e002      	b.n	80001fe <delay+0x12>
 80001f8:	687b      	ldr	r3, [r7, #4]
 80001fa:	3301      	adds	r3, #1
 80001fc:	607b      	str	r3, [r7, #4]
 80001fe:	687b      	ldr	r3, [r7, #4]
 8000200:	4a04      	ldr	r2, [pc, #16]	; (8000214 <delay+0x28>)
 8000202:	4293      	cmp	r3, r2
 8000204:	d9f8      	bls.n	80001f8 <delay+0xc>
}
 8000206:	bf00      	nop
 8000208:	bf00      	nop
 800020a:	370c      	adds	r7, #12
 800020c:	46bd      	mov	sp, r7
 800020e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000212:	4770      	bx	lr
 8000214:	0007a11f 	.word	0x0007a11f

08000218 <main>:

int main(void)
{
 8000218:	b580      	push	{r7, lr}
 800021a:	b084      	sub	sp, #16
 800021c:	af00      	add	r7, sp, #0
	GPIO_Handle_t Gpioled;

	Gpioled.pGPIOx = GPIOB;
 800021e:	4b0d      	ldr	r3, [pc, #52]	; (8000254 <main+0x3c>)
 8000220:	607b      	str	r3, [r7, #4]
	Gpioled.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_7;
 8000222:	2307      	movs	r3, #7
 8000224:	723b      	strb	r3, [r7, #8]
	Gpioled.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000226:	2301      	movs	r3, #1
 8000228:	727b      	strb	r3, [r7, #9]
	Gpioled.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800022a:	2302      	movs	r3, #2
 800022c:	72bb      	strb	r3, [r7, #10]
	Gpioled.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800022e:	2300      	movs	r3, #0
 8000230:	733b      	strb	r3, [r7, #12]
	Gpioled.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000232:	2300      	movs	r3, #0
 8000234:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockControl(GPIOB, ENABLE);
 8000236:	2101      	movs	r1, #1
 8000238:	4806      	ldr	r0, [pc, #24]	; (8000254 <main+0x3c>)
 800023a:	f000 f837 	bl	80002ac <GPIO_PeriClockControl>
	GPIO_Init(&Gpioled);
 800023e:	1d3b      	adds	r3, r7, #4
 8000240:	4618      	mov	r0, r3
 8000242:	f000 f91b 	bl	800047c <GPIO_Init>

	while(1) {
		GPIO_ToggleOutputPin(GPIOB, GPIO_PIN_NO_7);
 8000246:	2107      	movs	r1, #7
 8000248:	4802      	ldr	r0, [pc, #8]	; (8000254 <main+0x3c>)
 800024a:	f000 fab5 	bl	80007b8 <GPIO_ToggleOutputPin>
		delay();
 800024e:	f7ff ffcd 	bl	80001ec <delay>
		GPIO_ToggleOutputPin(GPIOB, GPIO_PIN_NO_7);
 8000252:	e7f8      	b.n	8000246 <main+0x2e>
 8000254:	40020400 	.word	0x40020400

08000258 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000258:	480d      	ldr	r0, [pc, #52]	; (8000290 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800025a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800025c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000260:	480c      	ldr	r0, [pc, #48]	; (8000294 <LoopForever+0x6>)
  ldr r1, =_edata
 8000262:	490d      	ldr	r1, [pc, #52]	; (8000298 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000264:	4a0d      	ldr	r2, [pc, #52]	; (800029c <LoopForever+0xe>)
  movs r3, #0
 8000266:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000268:	e002      	b.n	8000270 <LoopCopyDataInit>

0800026a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800026a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800026c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800026e:	3304      	adds	r3, #4

08000270 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000270:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000272:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000274:	d3f9      	bcc.n	800026a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000276:	4a0a      	ldr	r2, [pc, #40]	; (80002a0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000278:	4c0a      	ldr	r4, [pc, #40]	; (80002a4 <LoopForever+0x16>)
  movs r3, #0
 800027a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800027c:	e001      	b.n	8000282 <LoopFillZerobss>

0800027e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800027e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000280:	3204      	adds	r2, #4

08000282 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000282:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000284:	d3fb      	bcc.n	800027e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000286:	f000 faad 	bl	80007e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800028a:	f7ff ffc5 	bl	8000218 <main>

0800028e <LoopForever>:

LoopForever:
  b LoopForever
 800028e:	e7fe      	b.n	800028e <LoopForever>
  ldr   r0, =_estack
 8000290:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000294:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000298:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800029c:	0800084c 	.word	0x0800084c
  ldr r2, =_sbss
 80002a0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002a4:	2000001c 	.word	0x2000001c

080002a8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a8:	e7fe      	b.n	80002a8 <ADC_IRQHandler>
	...

080002ac <GPIO_PeriClockControl>:
 *
 * Note					- None
 *
 **************************************************************/
void GPIO_PeriClockControl(GPIO_Regdef_t *pGPIOx, uint8_t EnorDi)
{
 80002ac:	b480      	push	{r7}
 80002ae:	b083      	sub	sp, #12
 80002b0:	af00      	add	r7, sp, #0
 80002b2:	6078      	str	r0, [r7, #4]
 80002b4:	460b      	mov	r3, r1
 80002b6:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002b8:	78fb      	ldrb	r3, [r7, #3]
 80002ba:	2b01      	cmp	r3, #1
 80002bc:	d162      	bne.n	8000384 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA) {
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	4a64      	ldr	r2, [pc, #400]	; (8000454 <GPIO_PeriClockControl+0x1a8>)
 80002c2:	4293      	cmp	r3, r2
 80002c4:	d106      	bne.n	80002d4 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80002c6:	4b64      	ldr	r3, [pc, #400]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80002c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ca:	4a63      	ldr	r2, [pc, #396]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80002cc:	f043 0301 	orr.w	r3, r3, #1
 80002d0:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOH_PCLK_DI();
		} else if (pGPIOx == GPIOI) {
			GPIOI_PCLK_DI();
		}
	}
}
 80002d2:	e0b9      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 80002d4:	687b      	ldr	r3, [r7, #4]
 80002d6:	4a61      	ldr	r2, [pc, #388]	; (800045c <GPIO_PeriClockControl+0x1b0>)
 80002d8:	4293      	cmp	r3, r2
 80002da:	d106      	bne.n	80002ea <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002dc:	4b5e      	ldr	r3, [pc, #376]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80002de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e0:	4a5d      	ldr	r2, [pc, #372]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80002e2:	f043 0302 	orr.w	r3, r3, #2
 80002e6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e8:	e0ae      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOC) {
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	4a5c      	ldr	r2, [pc, #368]	; (8000460 <GPIO_PeriClockControl+0x1b4>)
 80002ee:	4293      	cmp	r3, r2
 80002f0:	d106      	bne.n	8000300 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80002f2:	4b59      	ldr	r3, [pc, #356]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80002f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f6:	4a58      	ldr	r2, [pc, #352]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80002f8:	f043 0304 	orr.w	r3, r3, #4
 80002fc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002fe:	e0a3      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOD) {
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	4a58      	ldr	r2, [pc, #352]	; (8000464 <GPIO_PeriClockControl+0x1b8>)
 8000304:	4293      	cmp	r3, r2
 8000306:	d106      	bne.n	8000316 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000308:	4b53      	ldr	r3, [pc, #332]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 800030a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030c:	4a52      	ldr	r2, [pc, #328]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 800030e:	f043 0308 	orr.w	r3, r3, #8
 8000312:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000314:	e098      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOE) {
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	4a53      	ldr	r2, [pc, #332]	; (8000468 <GPIO_PeriClockControl+0x1bc>)
 800031a:	4293      	cmp	r3, r2
 800031c:	d106      	bne.n	800032c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800031e:	4b4e      	ldr	r3, [pc, #312]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 8000320:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000322:	4a4d      	ldr	r2, [pc, #308]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 8000324:	f043 0310 	orr.w	r3, r3, #16
 8000328:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032a:	e08d      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOF) {
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	4a4f      	ldr	r2, [pc, #316]	; (800046c <GPIO_PeriClockControl+0x1c0>)
 8000330:	4293      	cmp	r3, r2
 8000332:	d106      	bne.n	8000342 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000334:	4b48      	ldr	r3, [pc, #288]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 8000336:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000338:	4a47      	ldr	r2, [pc, #284]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 800033a:	f043 0320 	orr.w	r3, r3, #32
 800033e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000340:	e082      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOG) {
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	4a4a      	ldr	r2, [pc, #296]	; (8000470 <GPIO_PeriClockControl+0x1c4>)
 8000346:	4293      	cmp	r3, r2
 8000348:	d106      	bne.n	8000358 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800034a:	4b43      	ldr	r3, [pc, #268]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 800034c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034e:	4a42      	ldr	r2, [pc, #264]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 8000350:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000354:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000356:	e077      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOH) {
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	4a46      	ldr	r2, [pc, #280]	; (8000474 <GPIO_PeriClockControl+0x1c8>)
 800035c:	4293      	cmp	r3, r2
 800035e:	d106      	bne.n	800036e <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000360:	4b3d      	ldr	r3, [pc, #244]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 8000362:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000364:	4a3c      	ldr	r2, [pc, #240]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 8000366:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800036a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036c:	e06c      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOI) {
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	4a41      	ldr	r2, [pc, #260]	; (8000478 <GPIO_PeriClockControl+0x1cc>)
 8000372:	4293      	cmp	r3, r2
 8000374:	d168      	bne.n	8000448 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000376:	4b38      	ldr	r3, [pc, #224]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 8000378:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037a:	4a37      	ldr	r2, [pc, #220]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 800037c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000380:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000382:	e061      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA) {
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	4a33      	ldr	r2, [pc, #204]	; (8000454 <GPIO_PeriClockControl+0x1a8>)
 8000388:	4293      	cmp	r3, r2
 800038a:	d106      	bne.n	800039a <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 800038c:	4b32      	ldr	r3, [pc, #200]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 800038e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000390:	4a31      	ldr	r2, [pc, #196]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 8000392:	f023 0301 	bic.w	r3, r3, #1
 8000396:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000398:	e056      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	4a2f      	ldr	r2, [pc, #188]	; (800045c <GPIO_PeriClockControl+0x1b0>)
 800039e:	4293      	cmp	r3, r2
 80003a0:	d106      	bne.n	80003b0 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 80003a2:	4b2d      	ldr	r3, [pc, #180]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80003a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a6:	4a2c      	ldr	r2, [pc, #176]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80003a8:	f023 0302 	bic.w	r3, r3, #2
 80003ac:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ae:	e04b      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOC) {
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	4a2b      	ldr	r2, [pc, #172]	; (8000460 <GPIO_PeriClockControl+0x1b4>)
 80003b4:	4293      	cmp	r3, r2
 80003b6:	d106      	bne.n	80003c6 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 80003b8:	4b27      	ldr	r3, [pc, #156]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80003ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003bc:	4a26      	ldr	r2, [pc, #152]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80003be:	f023 0304 	bic.w	r3, r3, #4
 80003c2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c4:	e040      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOD) {
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	4a26      	ldr	r2, [pc, #152]	; (8000464 <GPIO_PeriClockControl+0x1b8>)
 80003ca:	4293      	cmp	r3, r2
 80003cc:	d106      	bne.n	80003dc <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 80003ce:	4b22      	ldr	r3, [pc, #136]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80003d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d2:	4a21      	ldr	r2, [pc, #132]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80003d4:	f023 0308 	bic.w	r3, r3, #8
 80003d8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003da:	e035      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOE) {
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	4a22      	ldr	r2, [pc, #136]	; (8000468 <GPIO_PeriClockControl+0x1bc>)
 80003e0:	4293      	cmp	r3, r2
 80003e2:	d106      	bne.n	80003f2 <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 80003e4:	4b1c      	ldr	r3, [pc, #112]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80003e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e8:	4a1b      	ldr	r2, [pc, #108]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80003ea:	f023 0310 	bic.w	r3, r3, #16
 80003ee:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f0:	e02a      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOF) {
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	4a1d      	ldr	r2, [pc, #116]	; (800046c <GPIO_PeriClockControl+0x1c0>)
 80003f6:	4293      	cmp	r3, r2
 80003f8:	d106      	bne.n	8000408 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 80003fa:	4b17      	ldr	r3, [pc, #92]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 80003fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003fe:	4a16      	ldr	r2, [pc, #88]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 8000400:	f023 0320 	bic.w	r3, r3, #32
 8000404:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000406:	e01f      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOG) {
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	4a19      	ldr	r2, [pc, #100]	; (8000470 <GPIO_PeriClockControl+0x1c4>)
 800040c:	4293      	cmp	r3, r2
 800040e:	d106      	bne.n	800041e <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 8000410:	4b11      	ldr	r3, [pc, #68]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 8000412:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000414:	4a10      	ldr	r2, [pc, #64]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 8000416:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800041a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800041c:	e014      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOH) {
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	4a14      	ldr	r2, [pc, #80]	; (8000474 <GPIO_PeriClockControl+0x1c8>)
 8000422:	4293      	cmp	r3, r2
 8000424:	d106      	bne.n	8000434 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 8000426:	4b0c      	ldr	r3, [pc, #48]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 8000428:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800042a:	4a0b      	ldr	r2, [pc, #44]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 800042c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000430:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000432:	e009      	b.n	8000448 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOI) {
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	4a10      	ldr	r2, [pc, #64]	; (8000478 <GPIO_PeriClockControl+0x1cc>)
 8000438:	4293      	cmp	r3, r2
 800043a:	d105      	bne.n	8000448 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 800043c:	4b06      	ldr	r3, [pc, #24]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 800043e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000440:	4a05      	ldr	r2, [pc, #20]	; (8000458 <GPIO_PeriClockControl+0x1ac>)
 8000442:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000446:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000448:	bf00      	nop
 800044a:	370c      	adds	r7, #12
 800044c:	46bd      	mov	sp, r7
 800044e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000452:	4770      	bx	lr
 8000454:	40020000 	.word	0x40020000
 8000458:	40023800 	.word	0x40023800
 800045c:	40020400 	.word	0x40020400
 8000460:	40020800 	.word	0x40020800
 8000464:	40020c00 	.word	0x40020c00
 8000468:	40021000 	.word	0x40021000
 800046c:	40021400 	.word	0x40021400
 8000470:	40021800 	.word	0x40021800
 8000474:	40021c00 	.word	0x40021c00
 8000478:	40022000 	.word	0x40022000

0800047c <GPIO_Init>:
 *
 * Note					- None
 *
 **************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800047c:	b480      	push	{r7}
 800047e:	b087      	sub	sp, #28
 8000480:	af00      	add	r7, sp, #0
 8000482:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000484:	2300      	movs	r3, #0
 8000486:	617b      	str	r3, [r7, #20]

	// 1. Configure the mode of GPIO pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	795b      	ldrb	r3, [r3, #5]
 800048c:	2b03      	cmp	r3, #3
 800048e:	d821      	bhi.n	80004d4 <GPIO_Init+0x58>
		// Non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	795b      	ldrb	r3, [r3, #5]
 8000494:	461a      	mov	r2, r3
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	791b      	ldrb	r3, [r3, #4]
 800049a:	005b      	lsls	r3, r3, #1
 800049c:	fa02 f303 	lsl.w	r3, r2, r3
 80004a0:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clearing
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	681a      	ldr	r2, [r3, #0]
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	791b      	ldrb	r3, [r3, #4]
 80004ac:	4619      	mov	r1, r3
 80004ae:	2303      	movs	r3, #3
 80004b0:	408b      	lsls	r3, r1
 80004b2:	43db      	mvns	r3, r3
 80004b4:	4619      	mov	r1, r3
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	681b      	ldr	r3, [r3, #0]
 80004ba:	400a      	ands	r2, r1
 80004bc:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; // Setting
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	6819      	ldr	r1, [r3, #0]
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	697a      	ldr	r2, [r7, #20]
 80004ca:	430a      	orrs	r2, r1
 80004cc:	601a      	str	r2, [r3, #0]
		temp = 0;
 80004ce:	2300      	movs	r3, #0
 80004d0:	617b      	str	r3, [r7, #20]
 80004d2:	e0ca      	b.n	800066a <GPIO_Init+0x1ee>
	} else {
		// Interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT) {
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	795b      	ldrb	r3, [r3, #5]
 80004d8:	2b04      	cmp	r3, #4
 80004da:	d117      	bne.n	800050c <GPIO_Init+0x90>
			// 1. Configure the FTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80004dc:	4b4a      	ldr	r3, [pc, #296]	; (8000608 <GPIO_Init+0x18c>)
 80004de:	68db      	ldr	r3, [r3, #12]
 80004e0:	687a      	ldr	r2, [r7, #4]
 80004e2:	7912      	ldrb	r2, [r2, #4]
 80004e4:	4611      	mov	r1, r2
 80004e6:	2201      	movs	r2, #1
 80004e8:	408a      	lsls	r2, r1
 80004ea:	4611      	mov	r1, r2
 80004ec:	4a46      	ldr	r2, [pc, #280]	; (8000608 <GPIO_Init+0x18c>)
 80004ee:	430b      	orrs	r3, r1
 80004f0:	60d3      	str	r3, [r2, #12]
			// Clear corresponding RTSR bit
			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80004f2:	4b45      	ldr	r3, [pc, #276]	; (8000608 <GPIO_Init+0x18c>)
 80004f4:	689b      	ldr	r3, [r3, #8]
 80004f6:	687a      	ldr	r2, [r7, #4]
 80004f8:	7912      	ldrb	r2, [r2, #4]
 80004fa:	4611      	mov	r1, r2
 80004fc:	2201      	movs	r2, #1
 80004fe:	408a      	lsls	r2, r1
 8000500:	43d2      	mvns	r2, r2
 8000502:	4611      	mov	r1, r2
 8000504:	4a40      	ldr	r2, [pc, #256]	; (8000608 <GPIO_Init+0x18c>)
 8000506:	400b      	ands	r3, r1
 8000508:	6093      	str	r3, [r2, #8]
 800050a:	e035      	b.n	8000578 <GPIO_Init+0xfc>

		} else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT) {
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	795b      	ldrb	r3, [r3, #5]
 8000510:	2b05      	cmp	r3, #5
 8000512:	d117      	bne.n	8000544 <GPIO_Init+0xc8>
			// 1. Configure the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000514:	4b3c      	ldr	r3, [pc, #240]	; (8000608 <GPIO_Init+0x18c>)
 8000516:	689b      	ldr	r3, [r3, #8]
 8000518:	687a      	ldr	r2, [r7, #4]
 800051a:	7912      	ldrb	r2, [r2, #4]
 800051c:	4611      	mov	r1, r2
 800051e:	2201      	movs	r2, #1
 8000520:	408a      	lsls	r2, r1
 8000522:	4611      	mov	r1, r2
 8000524:	4a38      	ldr	r2, [pc, #224]	; (8000608 <GPIO_Init+0x18c>)
 8000526:	430b      	orrs	r3, r1
 8000528:	6093      	str	r3, [r2, #8]
			// Clear corresponding FTSR bit
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 800052a:	4b37      	ldr	r3, [pc, #220]	; (8000608 <GPIO_Init+0x18c>)
 800052c:	68db      	ldr	r3, [r3, #12]
 800052e:	687a      	ldr	r2, [r7, #4]
 8000530:	7912      	ldrb	r2, [r2, #4]
 8000532:	4611      	mov	r1, r2
 8000534:	2201      	movs	r2, #1
 8000536:	408a      	lsls	r2, r1
 8000538:	43d2      	mvns	r2, r2
 800053a:	4611      	mov	r1, r2
 800053c:	4a32      	ldr	r2, [pc, #200]	; (8000608 <GPIO_Init+0x18c>)
 800053e:	400b      	ands	r3, r1
 8000540:	60d3      	str	r3, [r2, #12]
 8000542:	e019      	b.n	8000578 <GPIO_Init+0xfc>

		} else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT) {
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	795b      	ldrb	r3, [r3, #5]
 8000548:	2b06      	cmp	r3, #6
 800054a:	d115      	bne.n	8000578 <GPIO_Init+0xfc>
			// 1. Configure both FTSR & RTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 800054c:	4b2e      	ldr	r3, [pc, #184]	; (8000608 <GPIO_Init+0x18c>)
 800054e:	68db      	ldr	r3, [r3, #12]
 8000550:	687a      	ldr	r2, [r7, #4]
 8000552:	7912      	ldrb	r2, [r2, #4]
 8000554:	4611      	mov	r1, r2
 8000556:	2201      	movs	r2, #1
 8000558:	408a      	lsls	r2, r1
 800055a:	4611      	mov	r1, r2
 800055c:	4a2a      	ldr	r2, [pc, #168]	; (8000608 <GPIO_Init+0x18c>)
 800055e:	430b      	orrs	r3, r1
 8000560:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000562:	4b29      	ldr	r3, [pc, #164]	; (8000608 <GPIO_Init+0x18c>)
 8000564:	689b      	ldr	r3, [r3, #8]
 8000566:	687a      	ldr	r2, [r7, #4]
 8000568:	7912      	ldrb	r2, [r2, #4]
 800056a:	4611      	mov	r1, r2
 800056c:	2201      	movs	r2, #1
 800056e:	408a      	lsls	r2, r1
 8000570:	4611      	mov	r1, r2
 8000572:	4a25      	ldr	r2, [pc, #148]	; (8000608 <GPIO_Init+0x18c>)
 8000574:	430b      	orrs	r3, r1
 8000576:	6093      	str	r3, [r2, #8]
		}

		// 2. Configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	791b      	ldrb	r3, [r3, #4]
 800057c:	089b      	lsrs	r3, r3, #2
 800057e:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	791b      	ldrb	r3, [r3, #4]
 8000584:	f003 0303 	and.w	r3, r3, #3
 8000588:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	681b      	ldr	r3, [r3, #0]
 800058e:	4a1f      	ldr	r2, [pc, #124]	; (800060c <GPIO_Init+0x190>)
 8000590:	4293      	cmp	r3, r2
 8000592:	d04d      	beq.n	8000630 <GPIO_Init+0x1b4>
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	681b      	ldr	r3, [r3, #0]
 8000598:	4a1d      	ldr	r2, [pc, #116]	; (8000610 <GPIO_Init+0x194>)
 800059a:	4293      	cmp	r3, r2
 800059c:	d032      	beq.n	8000604 <GPIO_Init+0x188>
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	681b      	ldr	r3, [r3, #0]
 80005a2:	4a1c      	ldr	r2, [pc, #112]	; (8000614 <GPIO_Init+0x198>)
 80005a4:	4293      	cmp	r3, r2
 80005a6:	d02b      	beq.n	8000600 <GPIO_Init+0x184>
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	4a1a      	ldr	r2, [pc, #104]	; (8000618 <GPIO_Init+0x19c>)
 80005ae:	4293      	cmp	r3, r2
 80005b0:	d024      	beq.n	80005fc <GPIO_Init+0x180>
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	4a19      	ldr	r2, [pc, #100]	; (800061c <GPIO_Init+0x1a0>)
 80005b8:	4293      	cmp	r3, r2
 80005ba:	d01d      	beq.n	80005f8 <GPIO_Init+0x17c>
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	681b      	ldr	r3, [r3, #0]
 80005c0:	4a17      	ldr	r2, [pc, #92]	; (8000620 <GPIO_Init+0x1a4>)
 80005c2:	4293      	cmp	r3, r2
 80005c4:	d016      	beq.n	80005f4 <GPIO_Init+0x178>
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	681b      	ldr	r3, [r3, #0]
 80005ca:	4a16      	ldr	r2, [pc, #88]	; (8000624 <GPIO_Init+0x1a8>)
 80005cc:	4293      	cmp	r3, r2
 80005ce:	d00f      	beq.n	80005f0 <GPIO_Init+0x174>
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	4a14      	ldr	r2, [pc, #80]	; (8000628 <GPIO_Init+0x1ac>)
 80005d6:	4293      	cmp	r3, r2
 80005d8:	d008      	beq.n	80005ec <GPIO_Init+0x170>
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	4a13      	ldr	r2, [pc, #76]	; (800062c <GPIO_Init+0x1b0>)
 80005e0:	4293      	cmp	r3, r2
 80005e2:	d101      	bne.n	80005e8 <GPIO_Init+0x16c>
 80005e4:	2308      	movs	r3, #8
 80005e6:	e024      	b.n	8000632 <GPIO_Init+0x1b6>
 80005e8:	2300      	movs	r3, #0
 80005ea:	e022      	b.n	8000632 <GPIO_Init+0x1b6>
 80005ec:	2307      	movs	r3, #7
 80005ee:	e020      	b.n	8000632 <GPIO_Init+0x1b6>
 80005f0:	2306      	movs	r3, #6
 80005f2:	e01e      	b.n	8000632 <GPIO_Init+0x1b6>
 80005f4:	2305      	movs	r3, #5
 80005f6:	e01c      	b.n	8000632 <GPIO_Init+0x1b6>
 80005f8:	2304      	movs	r3, #4
 80005fa:	e01a      	b.n	8000632 <GPIO_Init+0x1b6>
 80005fc:	2303      	movs	r3, #3
 80005fe:	e018      	b.n	8000632 <GPIO_Init+0x1b6>
 8000600:	2302      	movs	r3, #2
 8000602:	e016      	b.n	8000632 <GPIO_Init+0x1b6>
 8000604:	2301      	movs	r3, #1
 8000606:	e014      	b.n	8000632 <GPIO_Init+0x1b6>
 8000608:	40013c00 	.word	0x40013c00
 800060c:	40020000 	.word	0x40020000
 8000610:	40020400 	.word	0x40020400
 8000614:	40020800 	.word	0x40020800
 8000618:	40020c00 	.word	0x40020c00
 800061c:	40021000 	.word	0x40021000
 8000620:	40021400 	.word	0x40021400
 8000624:	40021800 	.word	0x40021800
 8000628:	40021c00 	.word	0x40021c00
 800062c:	40022000 	.word	0x40022000
 8000630:	2300      	movs	r3, #0
 8000632:	747b      	strb	r3, [r7, #17]

		SYSCFG_PCLK_EN();
 8000634:	4b5d      	ldr	r3, [pc, #372]	; (80007ac <GPIO_Init+0x330>)
 8000636:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000638:	4a5c      	ldr	r2, [pc, #368]	; (80007ac <GPIO_Init+0x330>)
 800063a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800063e:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000640:	7c7a      	ldrb	r2, [r7, #17]
 8000642:	7cbb      	ldrb	r3, [r7, #18]
 8000644:	009b      	lsls	r3, r3, #2
 8000646:	fa02 f103 	lsl.w	r1, r2, r3
 800064a:	4a59      	ldr	r2, [pc, #356]	; (80007b0 <GPIO_Init+0x334>)
 800064c:	7cfb      	ldrb	r3, [r7, #19]
 800064e:	3302      	adds	r3, #2
 8000650:	f842 1023 	str.w	r1, [r2, r3, lsl #2]


		// 3. Enable the EXTI interrupt delivery using IMR
		EXTI->IMR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000654:	4b57      	ldr	r3, [pc, #348]	; (80007b4 <GPIO_Init+0x338>)
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	687a      	ldr	r2, [r7, #4]
 800065a:	7912      	ldrb	r2, [r2, #4]
 800065c:	4611      	mov	r1, r2
 800065e:	2201      	movs	r2, #1
 8000660:	408a      	lsls	r2, r1
 8000662:	4611      	mov	r1, r2
 8000664:	4a53      	ldr	r2, [pc, #332]	; (80007b4 <GPIO_Init+0x338>)
 8000666:	430b      	orrs	r3, r1
 8000668:	6013      	str	r3, [r2, #0]
	}

	temp = 0;
 800066a:	2300      	movs	r3, #0
 800066c:	617b      	str	r3, [r7, #20]
	// 2. Configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	799b      	ldrb	r3, [r3, #6]
 8000672:	461a      	mov	r2, r3
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	791b      	ldrb	r3, [r3, #4]
 8000678:	005b      	lsls	r3, r3, #1
 800067a:	fa02 f303 	lsl.w	r3, r2, r3
 800067e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clearing
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	689a      	ldr	r2, [r3, #8]
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	791b      	ldrb	r3, [r3, #4]
 800068a:	4619      	mov	r1, r3
 800068c:	2303      	movs	r3, #3
 800068e:	408b      	lsls	r3, r1
 8000690:	43db      	mvns	r3, r3
 8000692:	4619      	mov	r1, r3
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	400a      	ands	r2, r1
 800069a:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;	// Setting
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	6899      	ldr	r1, [r3, #8]
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	697a      	ldr	r2, [r7, #20]
 80006a8:	430a      	orrs	r2, r1
 80006aa:	609a      	str	r2, [r3, #8]

	temp = 0;
 80006ac:	2300      	movs	r3, #0
 80006ae:	617b      	str	r3, [r7, #20]

	// 3. Configure the pupd settings.
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	79db      	ldrb	r3, [r3, #7]
 80006b4:	461a      	mov	r2, r3
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	791b      	ldrb	r3, [r3, #4]
 80006ba:	005b      	lsls	r3, r3, #1
 80006bc:	fa02 f303 	lsl.w	r3, r2, r3
 80006c0:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clearing
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	681b      	ldr	r3, [r3, #0]
 80006c6:	68da      	ldr	r2, [r3, #12]
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	791b      	ldrb	r3, [r3, #4]
 80006cc:	4619      	mov	r1, r3
 80006ce:	2303      	movs	r3, #3
 80006d0:	408b      	lsls	r3, r1
 80006d2:	43db      	mvns	r3, r3
 80006d4:	4619      	mov	r1, r3
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	400a      	ands	r2, r1
 80006dc:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;		// Setting
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	68d9      	ldr	r1, [r3, #12]
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	681b      	ldr	r3, [r3, #0]
 80006e8:	697a      	ldr	r2, [r7, #20]
 80006ea:	430a      	orrs	r2, r1
 80006ec:	60da      	str	r2, [r3, #12]

	temp = 0;
 80006ee:	2300      	movs	r3, #0
 80006f0:	617b      	str	r3, [r7, #20]

	// 4. Configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	7a1b      	ldrb	r3, [r3, #8]
 80006f6:	461a      	mov	r2, r3
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	791b      	ldrb	r3, [r3, #4]
 80006fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000700:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clearing
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	681b      	ldr	r3, [r3, #0]
 8000706:	685a      	ldr	r2, [r3, #4]
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	791b      	ldrb	r3, [r3, #4]
 800070c:	4619      	mov	r1, r3
 800070e:	2303      	movs	r3, #3
 8000710:	408b      	lsls	r3, r1
 8000712:	43db      	mvns	r3, r3
 8000714:	4619      	mov	r1, r3
 8000716:	687b      	ldr	r3, [r7, #4]
 8000718:	681b      	ldr	r3, [r3, #0]
 800071a:	400a      	ands	r2, r1
 800071c:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;	// Setting
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	681b      	ldr	r3, [r3, #0]
 8000722:	6859      	ldr	r1, [r3, #4]
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	697a      	ldr	r2, [r7, #20]
 800072a:	430a      	orrs	r2, r1
 800072c:	605a      	str	r2, [r3, #4]

	temp = 0;
 800072e:	2300      	movs	r3, #0
 8000730:	617b      	str	r3, [r7, #20]

	// 5. Configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN) {
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	795b      	ldrb	r3, [r3, #5]
 8000736:	2b02      	cmp	r3, #2
 8000738:	d132      	bne.n	80007a0 <GPIO_Init+0x324>
		// Configure the alt function registers.
		uint32_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	791b      	ldrb	r3, [r3, #4]
 800073e:	08db      	lsrs	r3, r3, #3
 8000740:	b2db      	uxtb	r3, r3
 8000742:	60fb      	str	r3, [r7, #12]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	791b      	ldrb	r3, [r3, #4]
 8000748:	f003 0307 	and.w	r3, r3, #7
 800074c:	60bb      	str	r3, [r7, #8]

		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));  // Clearing
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	681b      	ldr	r3, [r3, #0]
 8000752:	68fa      	ldr	r2, [r7, #12]
 8000754:	3208      	adds	r2, #8
 8000756:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800075a:	68bb      	ldr	r3, [r7, #8]
 800075c:	009b      	lsls	r3, r3, #2
 800075e:	210f      	movs	r1, #15
 8000760:	fa01 f303 	lsl.w	r3, r1, r3
 8000764:	43db      	mvns	r3, r3
 8000766:	4619      	mov	r1, r3
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	681b      	ldr	r3, [r3, #0]
 800076c:	4011      	ands	r1, r2
 800076e:	68fa      	ldr	r2, [r7, #12]
 8000770:	3208      	adds	r2, #8
 8000772:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2)); // Setting
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	681b      	ldr	r3, [r3, #0]
 800077a:	68fa      	ldr	r2, [r7, #12]
 800077c:	3208      	adds	r2, #8
 800077e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000782:	687b      	ldr	r3, [r7, #4]
 8000784:	7a5b      	ldrb	r3, [r3, #9]
 8000786:	4619      	mov	r1, r3
 8000788:	68bb      	ldr	r3, [r7, #8]
 800078a:	009b      	lsls	r3, r3, #2
 800078c:	fa01 f303 	lsl.w	r3, r1, r3
 8000790:	4619      	mov	r1, r3
 8000792:	687b      	ldr	r3, [r7, #4]
 8000794:	681b      	ldr	r3, [r3, #0]
 8000796:	4311      	orrs	r1, r2
 8000798:	68fa      	ldr	r2, [r7, #12]
 800079a:	3208      	adds	r2, #8
 800079c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80007a0:	bf00      	nop
 80007a2:	371c      	adds	r7, #28
 80007a4:	46bd      	mov	sp, r7
 80007a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007aa:	4770      	bx	lr
 80007ac:	40023800 	.word	0x40023800
 80007b0:	40013800 	.word	0x40013800
 80007b4:	40013c00 	.word	0x40013c00

080007b8 <GPIO_ToggleOutputPin>:
 *
 * Note					- None
 *
 **************************************************************/
void GPIO_ToggleOutputPin(GPIO_Regdef_t *pGPIOx, uint8_t PinNumber)
{
 80007b8:	b480      	push	{r7}
 80007ba:	b083      	sub	sp, #12
 80007bc:	af00      	add	r7, sp, #0
 80007be:	6078      	str	r0, [r7, #4]
 80007c0:	460b      	mov	r3, r1
 80007c2:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 80007c4:	687b      	ldr	r3, [r7, #4]
 80007c6:	695b      	ldr	r3, [r3, #20]
 80007c8:	78fa      	ldrb	r2, [r7, #3]
 80007ca:	2101      	movs	r1, #1
 80007cc:	fa01 f202 	lsl.w	r2, r1, r2
 80007d0:	405a      	eors	r2, r3
 80007d2:	687b      	ldr	r3, [r7, #4]
 80007d4:	615a      	str	r2, [r3, #20]
}
 80007d6:	bf00      	nop
 80007d8:	370c      	adds	r7, #12
 80007da:	46bd      	mov	sp, r7
 80007dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007e0:	4770      	bx	lr
	...

080007e4 <__libc_init_array>:
 80007e4:	b570      	push	{r4, r5, r6, lr}
 80007e6:	4d0d      	ldr	r5, [pc, #52]	; (800081c <__libc_init_array+0x38>)
 80007e8:	4c0d      	ldr	r4, [pc, #52]	; (8000820 <__libc_init_array+0x3c>)
 80007ea:	1b64      	subs	r4, r4, r5
 80007ec:	10a4      	asrs	r4, r4, #2
 80007ee:	2600      	movs	r6, #0
 80007f0:	42a6      	cmp	r6, r4
 80007f2:	d109      	bne.n	8000808 <__libc_init_array+0x24>
 80007f4:	4d0b      	ldr	r5, [pc, #44]	; (8000824 <__libc_init_array+0x40>)
 80007f6:	4c0c      	ldr	r4, [pc, #48]	; (8000828 <__libc_init_array+0x44>)
 80007f8:	f000 f818 	bl	800082c <_init>
 80007fc:	1b64      	subs	r4, r4, r5
 80007fe:	10a4      	asrs	r4, r4, #2
 8000800:	2600      	movs	r6, #0
 8000802:	42a6      	cmp	r6, r4
 8000804:	d105      	bne.n	8000812 <__libc_init_array+0x2e>
 8000806:	bd70      	pop	{r4, r5, r6, pc}
 8000808:	f855 3b04 	ldr.w	r3, [r5], #4
 800080c:	4798      	blx	r3
 800080e:	3601      	adds	r6, #1
 8000810:	e7ee      	b.n	80007f0 <__libc_init_array+0xc>
 8000812:	f855 3b04 	ldr.w	r3, [r5], #4
 8000816:	4798      	blx	r3
 8000818:	3601      	adds	r6, #1
 800081a:	e7f2      	b.n	8000802 <__libc_init_array+0x1e>
 800081c:	08000844 	.word	0x08000844
 8000820:	08000844 	.word	0x08000844
 8000824:	08000844 	.word	0x08000844
 8000828:	08000848 	.word	0x08000848

0800082c <_init>:
 800082c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800082e:	bf00      	nop
 8000830:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000832:	bc08      	pop	{r3}
 8000834:	469e      	mov	lr, r3
 8000836:	4770      	bx	lr

08000838 <_fini>:
 8000838:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800083a:	bf00      	nop
 800083c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800083e:	bc08      	pop	{r3}
 8000840:	469e      	mov	lr, r3
 8000842:	4770      	bx	lr
